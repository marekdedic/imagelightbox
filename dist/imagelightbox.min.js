!function (t, e, n, i) { "use strict"; var o = function () { var t = n.body || n.documentElement; return t = t.style, "" === t.WebkitTransition ? "-webkit-" : "" === t.MozTransition ? "-moz-" : "" === t.OTransition ? "-o-" : "" === t.transition ? "" : !1 }, a = o() !== !1, r = function (t, e, n) { var i = {}, a = o(); i[a + "transform"] = "translateX(" + e + ")", i[a + "transition"] = a + "transform " + n + "s linear", t.css(i) }, u = "ontouchstart" in e, c = e.navigator.pointerEnabled || e.navigator.msPointerEnabled, f = function (t) { if (u) return !0; if (!c || "undefined" == typeof t || "undefined" == typeof t.pointerType) return !1; if ("undefined" != typeof t.MSPOINTER_TYPE_MOUSE) { if (t.MSPOINTER_TYPE_MOUSE !== t.pointerType) return !0 } else if ("mouse" !== t.pointerType) return !0; return !1 }; t.fn.imageLightbox = function (o) { var u = t.extend({ selector: 'id="imagelightbox"', allowedTypes: "png|jpg|jpeg||gif", animationSpeed: 250, preloadNext: !0, enableKeyboard: !0, quitOnEnd: !1, quitOnImgClick: !1, quitOnDocClick: !0, quitOnEscKey: !0, onStart: !1, onEnd: !1, onLoadStart: !1, onLoadEnd: !1, previousTarget: function () { return this.previousTargetDefault() }, previousTargetDefault: function () { var t = d.index(s) - 1; if (0 > t) { if (u.quitOnEnd === !0) return I(), !1; t = d.length - 1 } s = d.eq(t) }, nextTarget: function () { return this.nextTargetDefault() }, nextTargetDefault: function () { var t = d.index(s) + 1; if (t >= d.length) { if (u.quitOnEnd === !0) return I(), !1; t = 0 } s = d.eq(t) } }, o), d = t([]), s = t(), l = t(), g = 0, p = 0, h = 0, v = !1, m = function (e) { var n = "a" === t(e).prop("tagName").toLowerCase() && new RegExp(".(" + u.allowedTypes + ")$", "i").test(t(e).attr("href")), o = t(e).attr("data-lightbox") !== i; return n || o }, E = function () { if (!l.length) return !0; var i = .8 * t(e).width(), o = .9 * t(e).height(), a = new Image; a.src = l.attr("src"), a.placeimage = function () { if (g = a.width, p = a.height, g > i || p > o) { var n = g / p > i / o ? g / i : p / o; g /= n, p /= n } l.css({ width: g + "px", height: p + "px", top: (t(e).height() - p) / 2 + "px", left: (t(e).width() - g) / 2 + "px" }) }; var r = n.createElement("div"); r.innerHTML = "<!--[if lt IE 9]><isOldIE></isOldIE><![endif]-->"; var u = 1 == r.getElementsByTagName("isOldIE").length; u ? a.onreadystatechange = function () { var t = a.readyState; ("loaded" === t || "complete" === t) && a.placeimage() } : a.onload = a.placeimage }, x = function (e) { if (v) return !1; if (e = "undefined" == typeof e ? !1 : "left" === e ? 1 : -1, l.length) { var n = { opacity: 0 }; a ? r(l, 100 * e - h + "px", u.animationSpeed / 1e3) : n.left = parseInt(l.css("left")) + 100 * e + "px", l.animate(n, u.animationSpeed, function () { T() }), h = 0 } v = !0, u.onLoadStart !== !1 && u.onLoadStart(), setTimeout(function () { var n = s.attr("href"); n === i && (n = s.attr("data-lightbox")), l = t("<img " + u.selector + " />").load(function () { l.appendTo("body"), E(); var n = { opacity: 1 }; if (l.css("opacity", 0), a) r(l, -100 * e + "px", 0), setTimeout(function () { r(l, "0px", u.animationSpeed / 1e3) }, 50); else { var i = parseInt(l.css("left")); n.left = i + "px", l.css("left", i - 100 * e + "px") } if (l.animate(n, u.animationSpeed, function () { v = !1, u.onLoadEnd !== !1 && u.onLoadEnd() }), u.preloadNext) { var o = d.eq(d.index(s) + 1); o.length || (o = d.eq(0)), t("<img />").attr("src", o.attr("href")).load() } }).attr("src", n).error(function () { u.onLoadEnd !== !1 && u.onLoadEnd() }); var o = 0, p = 0, m = 0; l.on(c ? "pointerup MSPointerUp" : "click", function (t) { if (t.preventDefault(), u.quitOnImgClick) return I(), !1; if (f(t.originalEvent)) return !0; var e = (t.pageX || t.originalEvent.pageX) - t.target.offsetLeft; g / 2 > e ? y() : S() }).on("touchstart pointerdown MSPointerDown", function (t) { return !f(t.originalEvent) || u.quitOnImgClick ? !0 : (a && (m = parseInt(l.css("left"))), void (o = t.originalEvent.pageX || t.originalEvent.touches[0].pageX)) }).on("touchmove pointermove MSPointerMove", function (t) { return !f(t.originalEvent) || u.quitOnImgClick ? !0 : (t.preventDefault(), p = t.originalEvent.pageX || t.originalEvent.touches[0].pageX, h = o - p, void (a ? r(l, -h + "px", 0) : l.css("left", m - h + "px"))) }).on("touchend touchcancel pointerup pointercancel MSPointerUp MSPointerCancel", function (t) { return !f(t.originalEvent) || u.quitOnImgClick ? !0 : void (Math.abs(h) > 50 ? 0 > h ? y() : S() : a ? r(l, "0px", u.animationSpeed / 1e3) : l.animate({ left: m + "px" }, u.animationSpeed / 2)) }) }, u.animationSpeed + 100) }, y = function () { u.previousTarget() !== !1 && x("left") }, S = function () { u.nextTarget() !== !1 && x("right") }, T = function () { return l.length ? (l.remove(), void (l = t())) : !1 }, I = function () { return l.length ? void l.animate({ opacity: 0 }, u.animationSpeed, function () { T(), v = !1, u.onEnd !== !1 && u.onEnd() }) : !1 }; return t(e).on("resize", E), u.quitOnDocClick && t(n).on("click", function (e) { e.preventDefault(), l.length && !t(e.target).is(l) && I() }), u.enableKeyboard && t(n).on("keyup", function (t) { return l.length ? (t.preventDefault(), 27 === t.keyCode && u.quitOnEscKey === !0 && I(), void (37 === t.keyCode ? y() : 39 === t.keyCode && S())) : !0 }), this.startImageLightbox = function (e) { return m(this) ? (e !== i && e.preventDefault(), v ? !1 : (v = !1, u.onStart !== !1 && u.onStart(), s = t(this), void x())) : !0 }, t(n).off("click", this.selector), t(n).on("click", this.selector, this.startImageLightbox), this.each(function () { return m(this) ? void (d = d.add(t(this))) : !0 }), this.switchImageLightbox = function (t) { var e = d.eq(t); if (e.length) { var n = d.index(s); s = e, x(n > t ? "left" : "right") } return this }, this.loadPreviousImage = function () { y() }, this.loadNextImage = function () { S() }, this.quitImageLightbox = function () { return I(), this }, this.addImageLightbox = function (e) { return e.each(function () { return m(this) ? void (d = d.add(t(this))) : !0 }), e.click(this.startImageLightbox), this }, this } }(jQuery, window, document);